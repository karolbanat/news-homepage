@use '../abstracts/variables';
@use '../abstracts/mixins';

:root {
	/* colors */
	@each $color, $shades in variables.$colors {
		@each $shade, $value in $shades {
			--clr-#{$color}-#{$shade}: #{$value};
		}
	}

	/* font families */
	--ff-primary: 'Inter', sans-serif;

	/* font weights */
	@each $font-weight, $value in variables.$font-weights {
		--fw-#{$font-weight}: #{$value};
	}

	/* font sizes */
	@each $screen, $sizes in variables.$font-sizes {
		@if $screen == small {
			@each $size, $value in $sizes {
				--fz-#{$size}: #{$value};
			}
		} @else {
			@include mixins.mq($screen) {
				@each $size, $value in $sizes {
					--fz-#{$size}: #{$value};
				}
			}
		}
	}

	/* gaps */
	--nav-list-gap: 2.4rem;
	--intro-gap: 6.4rem;
	--intro-content-gap: 2.4rem;
	--featured-article-gap: 1.6rem;
	--featured-body-gap: 2.4rem;
	--popular-gap: 3.2rem;

	@include mixins.mq(small) {
		--intro-gap: 3rem;
	}

	@include mixins.mq(medium) {
		--nav-list-gap: 4rem;
		--intro-content-gap: 2.8rem;
		--featured-body-gap: 3rem;
		--popular-gap: 3rem;
	}
	@include mixins.mq(large) {
		--featured-article-gap: 3rem;
	}
}
